@model test.Domain.Core.Post

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Post</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Text" class="control-label"></label>
                <input asp-for="Text" class="form-control" />
                <span asp-validation-for="Text" class="text-danger"></span>
            </div>
            <div class="editor-label">Файл изображения</div>
            <div class="editor-field">
                <input type="file" name="uploadedFile" />
            </div>
            <div class="form-group">
                <label asp-for="TopicId" class="control-label"></label>
                <select class="form-control" name="TopicId">
                    @foreach (test.Domain.Core.Topic topic in (ViewData["Topics"] as IList<test.Domain.Core.Topic>))
                    {
                    <option value="@topic.TopicId">@topic.TopicName</option>
                     }
                </select>
                <span asp-validation-for="Topic" class="text-danger"></span>
            </div>
            
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
